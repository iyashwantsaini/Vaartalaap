{"version":3,"sources":["../node_modules/codemirror/mode/handlebars/handlebars.js","../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/addon/mode/multiplex.js"],"names":["CodeMirror","defineSimpleMode","start","regex","push","token","handlebars_raw","pop","handlebars","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","defineMode","config","parserConfig","getMode","base","multiplexingMode","open","close","mode","parseDelimiters","defineMIME","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","asToken","apply","replace","result","i","length","Rule","data","next","this","tokenFunction","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","endScan","exec","current","index","curState","rule","matches","sol","stack","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","lState","startState","forceEnd","indexOf","arr","indentFunction","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","startingInner","curInner","oldContent","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars"],"mappings":"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","file":"static/js/16.f40213c5.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}